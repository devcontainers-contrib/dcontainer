{
    "id": "aptitude-packages",
    "version": "1.0.0",
    "name": "Aptitude packages",
    "documentationURL": "http://github.com/devcontainers-contrib/features/tree/main/src/aptitude-packages",
    "description": "aptitude is the text-based front-end for the APT package management system.",
    "options": {
        "packages": {
            "default": "",
            "description": "Comma separated list of packages.",
            "proposals": [
                "htop",
                "build-essential",
                "curl,ca-certificates"
            ],
            "type": "string"
        },
        "ppas": {
            "default": "",
            "description": "Comma separated list of required ppas (not recommended)",
            "proposals": [
                "ppa:deadsnakes/ppa"
            ],
            "type": "string"
        },
        "clean_ppas": {
            "default": "true",
            "description": "If ppas used, remove them after usage in order to increase safety",
            "proposals": [
                "latest"
            ],
            "type": "boolean"
        },
        "preserve_apt_list": {
            "default": "true",
            "description": "Preserving the existing apt list (the result of apt-get update) will decrease container layer size (but will require a re-update of the packages database on next install)",
            "proposals": [
                "latest"
            ],
            "type": "boolean"
        },
        "force_ppas_on_non_ubuntu": {
            "default": "false",
            "description": "Installing ppas on a non-ubuntu distro (eg. debian) is discouraged",
            "proposals": [
                "latest"
            ],
            "type": "boolean"
        }
    },
    "installsAfter": [],
    "dependencies": [],
    "install_command": "ppas_cmd=$(if ! [[ -z $PPAS ]]; then echo --ppas \"${PPAS}\" ; fi)\nforce_ppas_cmd=$(if [[ $FORCE_PPAS_ON_NON_UBUNTU == \"true\" ]]; then echo --force-ppas-on-non-ubuntu; else echo  --no-force-ppas-on-non-ubuntu ; fi)\nclean_ppas_cmd=$(if [[ $CLEAN_PPAS == \"true\" ]]; then echo --clean-ppas; else echo  --no-clean-ppas ; fi)\npreserve_apt_list_cmd=$(if [[ $PRESERVE_APT_LIST == \"true\" ]]; then echo --preserve-apt-list; else echo  --no-preserve-apt-list ; fi)\n\n$nanolayer_location install aptitude \"$PACKAGES\" \\\n   $ppas_cmd \\\n   $force_ppas_cmd \\\n   $clean_ppas_cmd \\\n   $preserve_apt_list_cmd \\\n   ",
    "test_scenarios": [
        {
            "name": "test_neovim_ubuntu",
            "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
            "test_commands": [
                "nvim --version"
            ],
            "options": {
                "packages": "neovim",
                "ppas": "ppa:neovim-ppa/stable"
            }
        }
        
    ]
}