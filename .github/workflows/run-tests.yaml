name: Tests

on:
  workflow_dispatch:
    inputs:
      enabled:
        type: boolean
        description: 'enabled'
        default: true

  workflow_call:
    inputs:
      enabled:
        type: boolean
        description: 'enabled'
        default: true

  pull_request:
  push:
    branches:
      - main

jobs:
  changes:
    if: ${{ inputs.enabled }}

    runs-on: ubuntu-latest

    outputs:
      relevant_files: ${{ steps.filter.outputs.relevant_files }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          relevant_files:
            - 'dcontainer/**'
            - 'tests/**'
            - '.github/workflows/run-tests.yaml'
            - 'requirements.txt'
            - 'requirements-dev.txt'


  # todo: add pytest argument to handle one test at a time, and then run them as matrix
  # find-feature:
  #   needs: [changes]  
  #   if: ${{ (needs.changes.outputs.relevant_files == 'true') || (github.event_name	== 'workflow_dispatch') }}
  #   runs-on: ubuntu-latest
  #   name: Find folders
  #   outputs:
  #     changed_features: ${{ steps.list-folders.outputs.folders }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - id: list-folders
  #       uses: ./.github/actions/list-folders-action
  #       with:
  #         path: ./tests/resources/test_feature_definitions


  run-tests:
    needs: [changes]  
    if: ${{ (needs.changes.outputs.relevant_files == 'true') || (github.event_name	== 'workflow_dispatch') }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: "yest docker platform"
        run: |
          DOCKER_DEFAULT_PLATFORM=linux/arm64 docker run -t ubuntu uname -a

      - name: "Set up Python 3.8"
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: "Install python dependencies"
        run: |
          python -m pip install --upgrade pip 
          python -m pip install --upgrade build setuptools wheel setuptools-scm
          pip install -r requirements.txt -r requirements-dev.txt
      - name: "Test with pytest"
        run: |
          python -m pytest -s -v ./tests
  
  artificial-job:
    runs-on: ubuntu-latest
    steps:
      - name: do something
        run: "echo hi"