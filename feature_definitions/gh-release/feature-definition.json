{
    "id": "gh-release",
    "version": "1.0.5",
    "name": "Github Release",
    "documentationURL": "http://github.com/devcontainers-contrib/features/tree/main/src/gh-release",
    "description": "Github Release feature will download, extract and add to path a release binary from a given repo",
    "options": {
        "repo": {
            "default": "",
            "description": "Select the version of the github release binary to install.",
            "proposals": [
                "digitalocean/doctl",
                "argoproj/argo-cd",
                "tenable/terrascan"
            ],
            "type": "string"
        },
        "target": {
            "default": "",
            "description": "The target binary name. For example, for Github CLI the binary name would be 'gh'. For DigitalOcean CLI: 'doctl', etc.",
            "proposals": [
                "gh",
                "doctl"
            ],
            "type": "string"
        },
        "version": {
            "default": "latest",
            "description": "Select the version of the github release binary to install.",
            "proposals": [
                "latest"
            ],
            "type": "string"
        },
        "binLocation": {
            "default": "/usr/local/bin",
            "description": "Location to download the target binary to. Typically a location which exist under PATH variable",
            "proposals": [
                "/usr/local/bin"
            ],
            "type": "string"
        },
        "libLocation": {
            "default": "/usr/local/lib",
            "description": "Location to download the any lib files into (if exists) to.",
            "proposals": [
                "/usr/local/lib"
            ],
            "type": "string"
        },
        "assetRegex": {
            "default": "",
            "description": "An optional filtering regex to help point the correct release asset.",
            "type": "string"
        }
    },
    "installsAfter": [],
    "dependencies": [],
    "install_command": "asset_regex_cmd=$(if ! [[ -z $ASSETREGEX ]]; then echo --asset-regex \"${ASSETREGEX}\" ; fi)\n$nanolayer_location \\\n   install gh-release \\\n   \"$REPO\" \\\n   \"$TARGET\" \\\n   --version \"$VERSION\" --bin-location \"$BINLOCATION\"  --lib-location \"$LIBLOCATION\"  $asset_regex_cmd --force",
    "test_scenarios": [
        {
            "name": "test_defaults_debian",
            "image": "mcr.microsoft.com/devcontainers/base:debian",
            "test_commands": [
                "gh --version"
            ],
            "options": {
                "version": "latest",
                "repo": "cli/cli",
                "target": "gh"
            }
        },
        {
            "name": "test_defaults_alpine",
            "image": "mcr.microsoft.com/devcontainers/base:alpine",
            "test_commands": [
                "gh --version"
            ],
            "options": {
                "version": "latest",
                "repo": "cli/cli",
                "target": "gh"
            }
        },
        {
            "name": "test_act",
            "image": "mcr.microsoft.com/devcontainers/base:debian",
            "test_commands": [
                "act --version"
            ],
            "options": {
                "version": "latest",
                "repo": "nektos/act",
                "target": "act"
            }
        },
        {
            "name": "test_powershell",
            "image": "mcr.microsoft.com/devcontainers/base:debian",
            "test_commands": [
                "pwsh --version"
            ],
            "options": {
                "version": "latest",
                "repo": "PowerShell/PowerShell",
                "target": "pwsh",
                "assetRegex": "^(?!.*(fxdependent))"
            }
        }
    ]
}